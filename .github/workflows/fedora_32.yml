name: fedora_32

on:
  push:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '*/15 * * * *'

env:
  CI_MAKE: make -f .gitlab.mk

jobs:
  fedora_32:
    # We want to run on external PRs, but not on our own internal PRs
    # as they'll be run by the push to the branch.
    if: ( github.event_name == 'push' ||
        github.event.pull_request.head.repo.full_name != github.repository ) &&
        ! endsWith(github.ref, '-notest')

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
          submodules: recursive
      - uses: ./.github/actions/environment
      - name: packaging
        env:
          # Our testing expects that the init process (PID 1) will
          # reap orphan processes. At least the following test leans
          # on it: app-tap/gh-4983-tnt-e-assert-false-hangs.test.lua.
          PACKPACK_EXTRA_DOCKER_RUN_PARAMS: '--init'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_ENDPOINT_URL: ${{ secrets.AWS_S3_ENDPOINT_URL }}
          LIVE_REPO_S3_DIR: ${{ secrets.LIVE_REPO_S3_DIR }}
          RELEASE_REPO_S3_DIR: ${{ secrets.RELEASE_REPO_S3_DIR }}
          GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
          GPG_SIGN_KEY: ${{ secrets.GPG_SIGN_KEY }}
        run: |
          if ${{ github.event_name == 'push' &&
              ( github.ref == 'refs/heads/master' ||
                github.ref == 'refs/heads/1.10' ||
                startsWith(github.ref, 'refs/heads/2.') ||
                startsWith(github.ref, 'refs/tags') ) }} ; then
            sudo apt-get -y update
            sudo apt-get install -y procmail createrepo awscli reprepro
            mkdir -p ~/.gnupg
            echo 'digest-algo sha256' >> ~/.gnupg/gpg.conf
            OS=fedora DIST=32 ${CI_MAKE} deploy
          else
            OS=fedora DIST=32 ${CI_MAKE} package
          fi
      - name: call action to send Telegram message on failure
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_CORE_TOKEN }}
          TELEGRAM_TO: ${{ secrets.TELEGRAM_CORE_TO }}
        uses: ./.github/actions/send-telegram-notify
        if: failure()
      - name: artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: centos-7
          retention-days: 21
          path: |
            build/usr/src/*/tarantool-*/test/var/artifacts
            strace.log
            packpack/strace.log
